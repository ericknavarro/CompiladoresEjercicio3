/******************************************
 * Ejemplo desarrollado por Erick Navarro *
 * Blog: e-navarro.blogspot.com           *
 * Julio - 2018                           *
 ******************************************/
 
Declare Number a;
Declare Number b;

Function Void main(){
	Print("Fibonacci de 0 es: " & fibonacci(0));
	Print("Fibonacci de 1 es: " & fibonacci(1));
	Print("Fibonacci de 2 es: " & fibonacci(2));
	Print("Fibonacci de 3 es: " & fibonacci(3));
	Print("Fibonacci de 4 es: " & fibonacci(4));
	Print("Fibonacci de 5 es: " & fibonacci(5));
	Print("Fibonacci de 6 es: " & fibonacci(6));
	Print("Fibonacci de 7 es: " & fibonacci(7));
	Print("Fibonacci de 8 es: " & fibonacci(8));
	Print("Fibonacci de 9 es: " & fibonacci(9));
	Print("Fibonacci de 10 es: " & fibonacci(10));
	Print("Fibonacci de 11 es: " & fibonacci(11));
	Print("Fibonacci de 12 es: " & fibonacci(12));
	Print("Fibonacci de 13 es: " & fibonacci(13));
	a=2;
	b=3;
	Declare Number c[a][b];
	c[a-1][b-2]=a+b;
	c[0][0]=1;
	c[0][1]=1;
	Print("El valor asignado al arreglo es: " & c[c[0][0]][c[0][1]]);
	Print("El valor asignado al arreglo +5*10/2 es: " & c[c[0][0]][c[0][1]]+5*10/2);
	Declare String d[c[c[0][0]][c[0][1]]][c[c[0][0]][c[0][1]]][c[c[0][0]][c[0][1]]];
	d[c[c[0][0]][c[0][1]]-1][c[c[0][0]][c[0][1]]-2][c[c[0][0]][c[0][1]]-3]="Hola ";
	d[c[c[0][0]][c[0][1]]-3][c[c[0][0]][c[0][1]]-2][c[c[0][0]][c[0][1]]-1]="Mundo";
	Print("Los dos valores contenidos por el arreglo de cadenas concatenados son : " & d[c[c[0][0]][c[0][1]]-1][c[c[0][0]][c[0][1]]-2][c[c[0][0]][c[0][1]]-3] & d[c[c[0][0]][c[0][1]]-3][c[c[0][0]][c[0][1]]-2][c[c[0][0]][c[0][1]]-1]);
	tablas(2,2);
	Print("Factorial de 5 es: " & factorial(5));
	Print("Factorial de 5 es: " & factorial2(5));
	imprimirSet(10);
	imprimirSet2(5);
	concatenar ("Hola", "Mundo");
	Print("Esto es el final de la prueba");
	Declare Number variableEnMain;
	variableEnMain=10;
	imprimirVariableEnMain();
}

Function Void imprimirVariableEnMain(){
	Print(variableEnMain);
}

Function Void tablas(Number param1, Number param2){
	Print("Tablas de" & " multiplicar");
	a=0;
	Print("----------------");
	While(a<param1){	
		a=a+1;
		b=0;
		While(b<param2){
			b=b+1;
			Print(a & " * " & b & " = " & a * b);
		}
		Print("----------------");
	}
}

Function Number factorial(Number n){
    if (n==0){
        return 1;
	}
    else{
        return n*(factorial(n-1));
	}
}

Function Number factorial2(Number n){
    Declare Number fact;
	fact=1;
    Declare Number i;
    if (n==0){
        fact=1;
	}
    else{
		For(i=1;i<n;i=i+1){
			fact=fact*i;
		}
	}
 return fact;
}

Function Void imprimirSet(Number paramSup){
	Print("Set de" & " numeros");
	a=0;
	Print("----------------");
	While(True){	
		Print(a);
		a=a+1;
		if (a>=paramSup){
			Print("----------------");
			Return;
		}
	}
}

Function Void imprimirSet2(Number paramSup){
	Print("Set de" & " numeros 2");
	a=0;
	Print("----------------");
	While(True){	
		Print(a);
		a=a+1;
		if (a>=paramSup){
			Print("----------------");
			Break;
		}
	}
}

Function Number fibonacci (Number n)
{
	if (n<0){
		Print("Debes ingresar un tamaÃ±o mayor o igual a 0");
		return -1;
	}elseif(n == 0){
		return 0;
	}elseif(n == 1){
		return 1;
	}else{
		return fibonacci(n-1) + fibonacci(n-2);
	}
}

Function Void concatenar (String a, String b)
{
	Print("La cadena concatenada es: " & a & " " & b);
}